"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const express_1 = tslib_1.__importDefault(require("express"));
const admin_center_controller_1 = tslib_1.__importDefault(require("../../controllers/admin-center-controller"));
const safe_controller_function_1 = tslib_1.__importDefault(require("../../shared/safe-controller-function"));
const organization_settings_validator_1 = tslib_1.__importDefault(require("../../middlewares/validators/organization-settings-validator"));
const team_owner_or_admin_validator_1 = tslib_1.__importDefault(require("../../middlewares/validators/team-owner-or-admin-validator"));
const adminCenterApiRouter = express_1.default.Router();
adminCenterApiRouter.get("/organization", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getOrganizationDetails));
adminCenterApiRouter.get("/organization/admins", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getOrganizationAdmins));
adminCenterApiRouter.put("/organization", team_owner_or_admin_validator_1.default, organization_settings_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.updateOrganizationName));
adminCenterApiRouter.put("/organization/owner/contact-number", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.updateOwnerContactNumber));
adminCenterApiRouter.get("/organization/users", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getOrganizationUsers));
adminCenterApiRouter.get("/organization/teams", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getOrganizationTeams));
adminCenterApiRouter.put("/organization/team/:id", team_owner_or_admin_validator_1.default, organization_settings_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.updateTeam));
adminCenterApiRouter.get("/organization/team/:id", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getTeamDetails));
adminCenterApiRouter.delete("/organization/team/:id", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.deleteTeam));
adminCenterApiRouter.put("/organization/team-member/:id", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.deleteById));
adminCenterApiRouter.post("/", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.create));
adminCenterApiRouter.put("/", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.create));
adminCenterApiRouter.get("/", team_owner_or_admin_validator_1.default, (0, safe_controller_function_1.default)(admin_center_controller_1.default.getOrganizationTeams));
exports.default = adminCenterApiRouter;
