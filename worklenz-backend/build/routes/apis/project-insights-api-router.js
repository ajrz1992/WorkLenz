"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const express_1 = tslib_1.__importDefault(require("express"));
const project_insights_controller_1 = tslib_1.__importDefault(require("../../controllers/project-insights-controller"));
const id_param_validator_1 = tslib_1.__importDefault(require("../../middlewares/validators/id-param-validator"));
const safe_controller_function_1 = tslib_1.__importDefault(require("../../shared/safe-controller-function"));
const projectInsightsApiRouter = express_1.default.Router();
projectInsightsApiRouter.get("/last-updated/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getLastUpdatedtasks));
projectInsightsApiRouter.get("/logs/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getProjectLogs));
projectInsightsApiRouter.get("/status-overview/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getStatusOverview));
projectInsightsApiRouter.get("/priority-overview/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getPriorityOverview));
projectInsightsApiRouter.get("/deadline/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getProjectDeadlineStats));
projectInsightsApiRouter.get("/members/stats/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getMemberInsightsByProjectId));
projectInsightsApiRouter.post("/members/tasks", (0, safe_controller_function_1.default)(project_insights_controller_1.default.getTasksByProjectMember));
projectInsightsApiRouter.get("/overdue-tasks/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getOverdueTasks));
projectInsightsApiRouter.get("/early-tasks/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getTasksFinishedEarly));
projectInsightsApiRouter.get("/late-tasks/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getTasksFinishedLate));
projectInsightsApiRouter.get("/overlogged-tasks/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getOverloggedTasksByProject));
projectInsightsApiRouter.get("/:id", id_param_validator_1.default, (0, safe_controller_function_1.default)(project_insights_controller_1.default.getById));
exports.default = projectInsightsApiRouter;
