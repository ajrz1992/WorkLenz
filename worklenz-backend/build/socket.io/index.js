"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const on_connect_1 = require("./commands/on-connect");
const on_create_label_1 = require("./commands/on-create-label");
const on_disconnect_1 = require("./commands/on-disconnect");
const on_quick_assign_or_remove_1 = require("./commands/on-quick-assign-or-remove");
const on_quick_task_1 = require("./commands/on-quick-task");
const on_task_end_date_change_1 = require("./commands/on-task-end-date-change");
const on_task_labels_change_1 = require("./commands/on-task-labels-change");
const on_task_name_change_1 = require("./commands/on-task-name-change");
const on_task_priority_change_1 = require("./commands/on-task-priority-change");
const on_task_status_change_1 = require("./commands/on-task-status-change");
const on_task_start_date_change_1 = require("./commands/on-task-start-date-change");
const events_1 = require("./events");
const util_1 = require("./util");
const on_time_estimation_change_1 = require("./commands/on-time-estimation-change");
const on_task_description_change_1 = require("./commands/on-task-description-change");
const on_get_task_progress_1 = require("./commands/on-get-task-progress");
const on_task_timer_start_1 = require("./commands/on-task-timer-start");
const on_task_timer_stop_1 = require("./commands/on-task-timer-stop");
const on_task_sort_order_change_1 = require("./commands/on-task-sort-order-change");
const on_join_or_leave_project_room_1 = require("./commands/on-join-or-leave-project-room");
const on_task_subscriber_change_1 = require("./commands/on-task-subscriber-change");
const on_project_subscriber_change_1 = require("./commands/on-project-subscriber-change");
const on_task_phase_change_1 = require("./commands/on-task-phase-change");
const on_roadmap_sort_order_change_1 = require("./commands/on-roadmap-sort-order-change");
const on_phase_start_date_change_1 = require("./commands/on-phase-start-date-change");
const on_phase_end_date_change_1 = require("./commands/on-phase-end-date-change");
const on_project_health_change_1 = require("./commands/on-project-health-change");
const on_project_start_date_change_1 = require("./commands/on-project-start-date-change");
const on_project_end_date_change_1 = require("./commands/on-project-end-date-change");
const on_project_status_change_1 = require("./commands/on-project-status-change");
const on_project_category_change_1 = require("./commands/on-project-category-change");
const on_create_project_category_1 = require("./commands/on-create-project-category");
const on_pt_create_label_1 = require("./commands/on_pt_create_label");
const on_pt_name_change_1 = require("./commands/on_pt_name_change");
const on_pt_quick_task_1 = require("./commands/on_pt_quick_task");
const on_pt_task_description_change_1 = require("./commands/on_pt_task_description_change");
const on_pt_task_labels_change_1 = require("./commands/on_pt_task_labels_change");
const on_pt_task_name_change_1 = require("./commands/on_pt_task_name_change");
const on_pt_task_phase_change_1 = require("./commands/on_pt_task_phase_change");
const on_pt_task_priority_change_1 = require("./commands/on_pt_task_priority_change");
const on_pt_task_sort_order_change_1 = require("./commands/on_pt_task_sort_order_change");
const on_pt_task_status_change_1 = require("./commands/on_pt_task_status_change");
const on_pt_task_time_estimation_change_1 = require("./commands/on_pt_task_time_estimation_change");
const on_gannt_drag_change_1 = require("./commands/on_gannt_drag_change");
const on_schedule_member_start_date_change_1 = require("./commands/on_schedule_member_start_date_change");
const on_schedule_member_end_date_change_1 = require("./commands/on_schedule_member_end_date_change");
const on_schedule_member_allocation_create_1 = require("./commands/on_schedule_member_allocation_create");
function register(io, socket) {
    (0, util_1.log)(socket.id, "client registered");
    socket.on(events_1.SocketEvents.LOGIN.toString(), id => (0, on_connect_1.on_login)(io, socket, id));
    socket.on(events_1.SocketEvents.QUICK_TASK.toString(), data => (0, on_quick_task_1.on_quick_task)(io, socket, data));
    socket.on(events_1.SocketEvents.QUICK_ASSIGNEES_UPDATE.toString(), data => (0, on_quick_assign_or_remove_1.on_quick_assign_or_remove)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_STATUS_CHANGE.toString(), data => (0, on_task_status_change_1.on_task_status_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_PRIORITY_CHANGE.toString(), data => (0, on_task_priority_change_1.on_task_priority_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_NAME_CHANGE.toString(), data => (0, on_task_name_change_1.on_task_name_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_LABELS_CHANGE.toString(), data => (0, on_task_labels_change_1.on_task_label_change)(io, socket, data));
    socket.on(events_1.SocketEvents.CREATE_LABEL.toString(), data => (0, on_create_label_1.on_create_label)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_START_DATE_CHANGE.toString(), data => (0, on_task_start_date_change_1.on_task_start_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_END_DATE_CHANGE.toString(), data => (0, on_task_end_date_change_1.on_task_end_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_TIME_ESTIMATION_CHANGE.toString(), data => (0, on_time_estimation_change_1.on_time_estimation_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_DESCRIPTION_CHANGE.toString(), data => (0, on_task_description_change_1.on_task_description_change)(io, socket, data));
    socket.on(events_1.SocketEvents.GET_TASK_PROGRESS.toString(), data => (0, on_get_task_progress_1.on_get_task_progress)(io, socket, data));
    socket.on(events_1.SocketEvents.GET_TASK_PROGRESS.toString(), data => (0, on_get_task_progress_1.on_get_task_progress)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_TIMER_START.toString(), data => (0, on_task_timer_start_1.on_task_timer_start)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_TIMER_STOP.toString(), data => (0, on_task_timer_stop_1.on_task_timer_stop)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_SORT_ORDER_CHANGE.toString(), data => (0, on_task_sort_order_change_1.on_task_sort_order_change)(io, socket, data));
    socket.on(events_1.SocketEvents.JOIN_OR_LEAVE_PROJECT_ROOM.toString(), data => (0, on_join_or_leave_project_room_1.on_join_project_room)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_SUBSCRIBERS_CHANGE.toString(), data => (0, on_task_subscriber_change_1.on_task_subscriber_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_SUBSCRIBERS_CHANGE.toString(), data => (0, on_project_subscriber_change_1.on_project_subscriber_change)(io, socket, data));
    socket.on(events_1.SocketEvents.TASK_PHASE_CHANGE.toString(), data => (0, on_task_phase_change_1.on_task_phase_change)(io, socket, data));
    socket.on(events_1.SocketEvents.ROADMAP_SORT_ORDER_CHANGE.toString(), data => (0, on_roadmap_sort_order_change_1.on_roadmap_sort_order_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PHASE_START_DATE_CHANGE.toString(), data => (0, on_phase_start_date_change_1.on_phase_start_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PHASE_END_DATE_CHANGE.toString(), data => (0, on_phase_end_date_change_1.on_phase_end_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_HEALTH_CHANGE.toString(), data => (0, on_project_health_change_1.on_project_health_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_START_DATE_CHANGE.toString(), data => (0, on_project_start_date_change_1.on_project_start_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_END_DATE_CHANGE.toString(), data => (0, on_project_end_date_change_1.on_project_end_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_STATUS_CHANGE.toString(), data => (0, on_project_status_change_1.on_project_status_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PROJECT_CATEGORY_CHANGE.toString(), data => (0, on_project_category_change_1.on_project_category_change)(io, socket, data));
    socket.on(events_1.SocketEvents.CREATE_PROJECT_CATEGORY.toString(), data => (0, on_create_project_category_1.on_create_project_category)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_QUICK_TASK.toString(), data => (0, on_pt_quick_task_1.on_pt_quick_task)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_NAME_CHANGE.toString(), data => (0, on_pt_name_change_1.on_pt_name_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_SORT_ORDER_CHANGE.toString(), data => (0, on_pt_task_sort_order_change_1.on_pt_task_sort_order_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_NAME_CHANGE.toString(), data => (0, on_pt_task_name_change_1.on_pt_task_name_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_TIME_ESTIMATION_CHANGE.toString(), data => (0, on_pt_task_time_estimation_change_1.on_pt_task_time_estimation_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_DESCRIPTION_CHANGE.toString(), data => (0, on_pt_task_description_change_1.on_pt_task_description_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_LABELS_CHANGE.toString(), data => (0, on_pt_task_labels_change_1.on_pt_task_labels_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_CREATE_LABEL.toString(), data => (0, on_pt_create_label_1.on_pt_create_label)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_PHASE_CHANGE.toString(), data => (0, on_pt_task_phase_change_1.on_pt_task_phase_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_STATUS_CHANGE.toString(), data => (0, on_pt_task_status_change_1.on_pt_task_status_change)(io, socket, data));
    socket.on(events_1.SocketEvents.PT_TASK_PRIORITY_CHANGE.toString(), data => (0, on_pt_task_priority_change_1.on_pt_task_priority_change)(io, socket, data));
    socket.on(events_1.SocketEvents.GANNT_DRAG_CHANGE.toString(), data => (0, on_gannt_drag_change_1.on_gannt_drag_change)(io, socket, data));
    socket.on(events_1.SocketEvents.SCHEDULE_MEMBER_ALLOCATION_CREATE.toString(), data => (0, on_schedule_member_allocation_create_1.on_schedule_member_allocation_create)(io, socket, data));
    socket.on(events_1.SocketEvents.SCHEDULE_MEMBER_START_DATE_CHANGE.toString(), data => (0, on_schedule_member_start_date_change_1.on_schedule_member_start_date_change)(io, socket, data));
    socket.on(events_1.SocketEvents.SCHEDULE_MEMBER_END_DATE_CHANGE.toString(), data => (0, on_schedule_member_end_date_change_1.on_schedule_member_end_date_change)(io, socket, data));
    socket.on("disconnect", (reason) => (0, on_disconnect_1.on_disconnect)(io, socket, reason));
}
exports.register = register;
